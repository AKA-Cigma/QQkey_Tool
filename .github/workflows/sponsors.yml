name: Sync Sponsors to README

on:
  schedule:
    - cron: '0 * * * *'  # 每小时执行一次
  workflow_dispatch:  # 也支持手动触发

jobs:
  sync-sponsors:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install requests

      - name: Fetch sponsors data
        id: fetch-sponsors
        env:
          USER_ID: ${{ secrets.USER_ID }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          import requests
          import time
          from hashlib import md5
          import os
          import base64

          def get_sign(user_id, token, params, ts):
              return md5(f"{token}params{params}ts{ts}user_id{user_id}".encode("utf-8")).hexdigest()

          user_id = os.getenv('USER_ID')
          token = os.getenv('API_TOKEN')
          ts = int(time.time())
          data = {
              "user_id": user_id,
              "ts": ts
          }
          params = '{"page":1}'
          data['sign'] = get_sign(user_id, token, params, ts)
          data['params'] = params
          res = requests.post("https://afdian.com/api/open/query-sponsor", json=data)
          sponsors = [{"sponsor_plans": [], "current_plan": {"name": ""}, "all_sum_amount": "0.00", "create_time": 1581011280, "last_pay_time": 1598852327, "user": {"user_id": "3524370d11e8ae8852540025c377", "name": "Hee", "avatar": "https://pic1.afdiancdn.com/user/27f7sss7/avatar/2d9659585fc4798068efbb652e56c08a.jpg"}}, {"sponsor_plans": [{"plan_id": "sdfsf", "rank": 0, "user_id": "34343", "status": 3, "name": "独立永久方案", "pic": "", "desc": "啊1；", "price": "1.00", "update_time": 1621084278, "pay_month": 1, "show_price": "1.00", "independent": 1, "permanent": 1, "can_buy_hide": 0, "need_address": 0, "product_type": 0, "sale_limit_count": -1, "need_invite_code": False, "expire_time": 2114352000, "sku_processed": [], "rankType": 21}], "current_plan": {"plan_id": "sdfsfsf", "rank": 0, "user_id": "3453535", "status": 3, "name": "独立永久方案", "pic": "", "desc": "啊1；", "price": "1.00", "update_time": 1621084278, "pay_month": 1, "show_price": "1.00", "independent": 1, "permanent": 1, "can_buy_hide": 0, "need_address": 0, "product_type": 0, "sale_limit_count": -1, "need_invite_code": False, "expire_time": 2114352000, "sku_processed": [], "rankType": 21}, "all_sum_amount": "13.00", "first_pay_time": 1576776221, "last_pay_time": 1581083107, "user": {"user_id": "sfff", "name": "sfsf：十五种幸福（新版）", "avatar": "https://pic1.afdiancdn.com/user/sdfsfsf/avatar/c13b6125cbd9fbe7810c79256df1f5b2_w4032_h3024_s3215.jpeg"}}]
          sponsors_info = []
          for sponsor in sponsors:
              user = sponsor['user']
              amount = sponsor["all_sum_amount"]
              avatar = user.get('avatar', '')
              name = user.get('name', '')
              sponsors_info.append(f"<img src=\"{avatar}\" alt=\"{name}\" width=\"35\" height=\"35\"> {name} - {amount}元")
          sponsors_text = '  \n'.join(sponsors_info)
          encoded_text = base64.b64encode(sponsors_text.encode('utf-8')).decode('utf-8')
          print(f"::set-output name=sponsors_text::{encoded_text}")
        shell: python

      - name: Update README
        id: update_readme
        env:
          ENCODED_TEXT: ${{ steps.fetch-sponsors.outputs.sponsors_text }}
        run: |
          import os
          import base64
          sponsors_info = base64.b64decode(os.getenv("ENCODED_TEXT")).decode('utf-8')
          with open("README.md",'w+') as f:
              content = f.readlines()
              start_line = content.index("<!-- START_SPONSORS -->")
              end_line = content.index("<!-- END_SPONSORS -->")
              if start_line == -1 or end_line == -1:
                  print("Index not found")
                  exit(1)
              num = 0
              for i in range(start_line+1,end_line):
                  if num > len(sponsors_info) - 1:
                      del content[i]
                      continue
                  content[i] = sponsors_info[num]
                  num += 1
              f.writelines(content)
        shell: python
              

      - name: Check for changes
        id: check-changes
        run: |
          if git diff --quiet README.md; then
            echo "::set-output name=has_changes::false"
          else
            echo "::set-output name=has_changes::true"
          fi

      - name: Commit and push changes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update sponsors list in README"
          git push
